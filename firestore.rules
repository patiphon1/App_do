rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* ===== OTP/Token ===== */
    match /otp_requests/{email}/codes/{codeId} { allow read, write: if false; }
    match /password_reset_tokens/{token}       { allow read, write: if false; }

    /* ===== Users ===== */
    match /users/{uid} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && request.auth.uid == uid;

      match /ratings/{ratingId} {
        allow read: if true;
        allow create, update, delete: if false;
      }
    }

    /* ===== Posts + one-time rating ===== */
    match /posts/{postId} {
      allow read: if true;

      allow create: if request.auth != null
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.tag in ['announce','donate','swap'];

      allow update, delete: if request.auth != null
        && resource.data.userId == request.auth.uid;

      match /ratings/{raterUid} {
        function isSignedIn() { return request.auth != null; }
        allow read: if true;
        allow create: if isSignedIn()
          && request.auth.uid == raterUid
          && !exists(/databases/$(database)/documents/posts/$(postId)/ratings/$(raterUid))
          && request.resource.data.keys().hasOnly(['value','by','at'])
          && request.resource.data.value is number
          && request.resource.data.value >= 0
          && request.resource.data.value <= 5
          && request.resource.data.by == request.auth.uid
          && request.resource.data.at is timestamp;
        allow update, delete: if false;
      }
    }

    /* ===== Chats ===== */
    match /chats/{chatId} {
      allow read, write: if request.auth != null;
      match /messages/{msgId} {
        allow read, write: if request.auth != null;
      }
    }


    /* ===== ปิดทุกอย่างที่เหลือ ===== */
    match /{document=**} { allow read, write: if false; }
  }
}
