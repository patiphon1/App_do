rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* ===== OTP/Token ===== */
    match /otp_requests/{email}/codes/{codeId} { allow read, write: if false; }
    match /password_reset_tokens/{token}       { allow read, write: if false; }

    /* ===== Users ===== */
    match /users/{uid} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && request.auth.uid == uid;

      match /ratings/{ratingId} {
        allow read: if true;
        allow create, update, delete: if false;
      }
    }

    /* ===== Posts + one-time rating ===== */
    match /posts/{postId} {
      allow read: if true;

      allow create: if request.auth != null
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.tag in ['announce','donate','swap'];

      allow update, delete: if request.auth != null
        && resource.data.userId == request.auth.uid;

      match /ratings/{raterUid} {
        function isSignedIn() { return request.auth != null; }
        allow read: if true;
        allow create: if isSignedIn()
          && request.auth.uid == raterUid
          && !exists(/databases/$(database)/documents/posts/$(postId)/ratings/$(raterUid))
          && request.resource.data.keys().hasOnly(['value','by','at'])
          && request.resource.data.value is number
          && request.resource.data.value >= 0
          && request.resource.data.value <= 5
          && request.resource.data.by == request.auth.uid
          && request.resource.data.at is timestamp;
        allow update, delete: if false;
      }
    }

    /* ===== Chats (ปลอดภัย: เฉพาะผู้ร่วมแชทอ่าน/เขียนได้) ===== */
    match /chats/{chatId} {
      function isSignedIn() { return request.auth != null; }
      function isParticipant() {
        return isSignedIn()
          && resource.data.users.hasAny([request.auth.uid]);
      }
      function isParticipantOnCreate() {
        return isSignedIn()
          && request.resource.data.users.hasAny([request.auth.uid]);
      }

      // อ่านห้องได้เฉพาะผู้ร่วมแชท
      allow read: if isParticipant();

      // สร้าง/อัปเดตห้องได้เฉพาะผู้ร่วมแชท
      allow create: if isParticipantOnCreate()
        && request.resource.data.keys().hasOnly([
          'id','users','peerMap','kind','postId','postTitle',
          'lastText','lastAt','unread','createdAt','updatedAt'
        ])
        && request.resource.data.users.size() == 2;

      allow update: if isParticipant();

      // ข้อความในห้อง
      match /messages/{msgId} {
        function isMsgParticipant() {
          return isSignedIn()
            && get(/databases/$(database)/documents/chats/$(chatId)).data.users.hasAny([request.auth.uid]);
        }

        allow read: if isMsgParticipant();

        // อนุญาต 3 รูปแบบ:
        // 1) text: {from,to,text,createdAt} (+ optional type='text')
        // 2) image: {from,to,type='image',imageUrl,storagePath,[width,height,size],createdAt}
        // 3) system: {from,type='system',text,createdAt}  (ไม่มี to)
        allow create: if isMsgParticipant()
          && request.resource.data.from == request.auth.uid
          && (
              // system
              (
                request.resource.data.type == 'system'
                && request.resource.data.keys().hasOnly(['from','type','text','createdAt'])
                && request.resource.data.text is string
              )
              ||
              // image
              (
                request.resource.data.type == 'image'
                && request.resource.data.keys().hasOnly([
                  'from','to','type','imageUrl','storagePath','width','height','size','createdAt'
                ])
                && request.resource.data.to in get(/databases/$(database)/documents/chats/$(chatId)).data.users
                && request.resource.data.imageUrl is string
                && request.resource.data.storagePath is string
              )
              ||
              // text (type อาจไม่ส่งมาก็ถือเป็น text)
              (
                (!('type' in request.resource.data) || request.resource.data.type == 'text')
                && request.resource.data.keys().hasOnly(['from','to','text','createdAt'])
                && request.resource.data.to in get(/databases/$(database)/documents/chats/$(chatId)).data.users
                && request.resource.data.text is string
              )
          );

        // ไม่ให้แก้/ลบข้อความย้อนหลัง
        allow update, delete: if false;
      }
    }

    /* ===== ปิดทุกอย่างที่เหลือ ===== */
    match /{document=**} { allow read, write: if false; }
  }
}
